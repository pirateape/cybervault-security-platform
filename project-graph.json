{
  "graph": {
    "nodes": {
      "web2-e2e": {
        "name": "web2-e2e",
        "type": "e2e",
        "data": {
          "root": "web2-e2e",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": ["e2e-ci--src/example.spec.ts", "e2e-ci"]
            }
          },
          "targets": {
            "e2e": {
              "options": {
                "cwd": "web2-e2e",
                "command": "playwright test"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": ["web2"],
                  "target": "start"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^default",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/web2-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/web2-e2e/playwright-report"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/example.spec.ts": {
              "options": {
                "cwd": "web2-e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "../dist/.playwright/web2-e2e/playwright-report/src-example-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "../dist/.playwright/web2-e2e/playwright-report/src-example-spec-ts"
                },
                "command": "playwright test src/example.spec.ts --output=../dist/.playwright/web2-e2e/test-output/src-example-spec-ts"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in src/example.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": ["web2"],
                  "target": "start"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^default",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/web2-e2e/test-output/src-example-spec-ts",
                "{workspaceRoot}/dist/.playwright/web2-e2e/playwright-report/src-example-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^default",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/web2-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/web2-e2e/playwright-report"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/example.spec.ts",
                  "projects": "self",
                  "params": "forward"
                }
              ],
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "web2-e2e",
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "web2-e2e/src",
          "tags": [],
          "implicitDependencies": ["web2"]
        }
      },
      "web-e2e": {
        "name": "web-e2e",
        "type": "e2e",
        "data": {
          "root": "web-e2e",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": ["e2e-ci--src/example.spec.ts", "e2e-ci"]
            }
          },
          "targets": {
            "e2e": {
              "options": {
                "cwd": "web-e2e",
                "command": "playwright test"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": ["web"],
                  "target": "preview"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^default",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/web-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/web-e2e/playwright-report"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/example.spec.ts": {
              "options": {
                "cwd": "web-e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "../dist/.playwright/web-e2e/playwright-report/src-example-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "../dist/.playwright/web-e2e/playwright-report/src-example-spec-ts"
                },
                "command": "playwright test src/example.spec.ts --output=../dist/.playwright/web-e2e/test-output/src-example-spec-ts"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in src/example.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": ["web"],
                  "target": "preview"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^default",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/web-e2e/test-output/src-example-spec-ts",
                "{workspaceRoot}/dist/.playwright/web-e2e/playwright-report/src-example-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^default",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/web-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/web-e2e/playwright-report"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/example.spec.ts",
                  "projects": "self",
                  "params": "forward"
                }
              ],
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "web-e2e",
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "web-e2e/src",
          "tags": [],
          "implicitDependencies": ["web"]
        }
      },
      "web2": {
        "name": "web2",
        "type": "app",
        "data": {
          "root": "web2",
          "targets": {
            "build": {
              "options": {
                "cwd": "web2",
                "tty": false,
                "command": "next build"
              },
              "dependsOn": ["^build"],
              "cache": true,
              "inputs": [
                "default",
                "^default",
                {
                  "externalDependencies": ["next"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/web2/.next/!(cache)/**/*",
                "{workspaceRoot}/web2/.next/!(cache)"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "web2",
                "command": "next dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "continuous": true,
              "options": {
                "cwd": "web2",
                "command": "next start"
              },
              "dependsOn": ["build"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "options": {
                "cwd": "web2",
                "command": "next start"
              },
              "dependsOn": ["build"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects web2 --includeDependentProjects -- npx nx build-deps web2"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "web2",
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "web2",
          "projectType": "application",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "web": {
        "name": "web",
        "type": "app",
        "data": {
          "root": "web",
          "projectType": "application",
          "metadata": {},
          "targets": {
            "build": {
              "options": {
                "cwd": "web",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": [
                "default",
                "^default",
                {
                  "externalDependencies": ["vite"]
                }
              ],
              "outputs": ["{workspaceRoot}/dist/web"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite build",
                "help": {
                  "command": "npx vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "web",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "web",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "dependsOn": ["build"],
              "options": {
                "cwd": "web",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "npx vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "default",
                "^default",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "options": {
                "cwd": "web",
                "command": "tsc --noEmit -p tsconfig.app.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": ["typescript"],
                "help": {
                  "command": "npx tsc -p tsconfig.app.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects web --includeDependentProjects -- npx nx build-deps web"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "web",
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "web/src",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "complysentinel": {
        "name": "complysentinel",
        "type": "lib",
        "data": {
          "root": ".",
          "name": "complysentinel",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": ["dev", "list", "generate", "parse-prd", "seed"]
            },
            "description": "ComplySentinel Technologies is a cutting-edge provider of cloud compliance automation solutions, specializing in the security and regulatory needs of organizations using Microsoft 365, Azure Entra ID, and Power Platform. Our flagship product, the ComplySentinel Compliance Automation Platform, empowers enterprises to maintain robust cybersecurity postures by continuously scanning, analyzing, and remediating configurations across these environments.",
            "js": {
              "packageName": "complysentinel",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "node scripts/dev.js",
                "runCommand": "npm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "list": {
              "executor": "nx:run-script",
              "options": {
                "script": "list"
              },
              "metadata": {
                "scriptContent": "node scripts/dev.js list",
                "runCommand": "npm run list"
              },
              "configurations": {},
              "parallelism": true
            },
            "generate": {
              "executor": "nx:run-script",
              "options": {
                "script": "generate"
              },
              "metadata": {
                "scriptContent": "node scripts/dev.js generate",
                "runCommand": "npm run generate"
              },
              "configurations": {},
              "parallelism": true
            },
            "parse-prd": {
              "executor": "nx:run-script",
              "options": {
                "script": "parse-prd"
              },
              "metadata": {
                "scriptContent": "node scripts/dev.js parse-prd",
                "runCommand": "npm run parse-prd"
              },
              "configurations": {},
              "parallelism": true
            },
            "seed": {
              "executor": "nx:run-script",
              "options": {
                "script": "seed"
              },
              "metadata": {
                "scriptContent": "ts-node --loader ts-node/esm scripts/seed.ts",
                "runCommand": "npm run seed"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "web2-e2e": [
        {
          "source": "web2-e2e",
          "target": "web2",
          "type": "implicit"
        }
      ],
      "web-e2e": [
        {
          "source": "web-e2e",
          "target": "web",
          "type": "implicit"
        }
      ],
      "web2": [],
      "web": [],
      "complysentinel": []
    }
  }
}
